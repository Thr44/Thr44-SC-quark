CLASS:: SCPad
summary:: A class to access iOS SCPad! GUI application
categories:: Thr44, iOS
related:: Classes/Odef

DESCRIPTION::
SCPad is a wrapper for communicating link::Classes/Odef:: with iOS SCPad! application

It is accessible in the iTunes App Store:
link::http://itunes.apple.com/pt/app/scpad!/id521113570?l=en&mt=8::


note::if you have problems or suggestions please contact me: mcardoso@344server.org::

image::SCPad.png::

subsection::Configuration

list::
## iPad and your computer must be connected to the same Wi-Fi router.
## Macintosh provides a 'computer-to-computer network' that can also be used (in your computer's Wi-Fi status in menu bar select 'Create Network...'
## in SCPad! superCollider settings use your computer's ip Address for 'Lang Host'. 'Lang Port' is 57120 by default.
## instantiate SCPad on SuperCollider using your iPad's ip Address and port 12345
code::

~computerIP="192.168.1.83"; //your iPad's IP Address
~scPad=SCPad(~computerIP);

::
::
subsection::Creating Odef with controls to display on SCPad!

An example Odef that can be controlled by SCPad!:

code::

//define Odef:
SynthDef(\tgrains, {
	arg density=0, grainSize=#[0.05,0.5], bufnum, rate=#[-4, 4], grainPos=#[0, 1], gate = 1, amp = 1, pan=0, gain=1;
	var trigger, gSize, gRate, gPos, gPan, sound, enve;
	trigger = Impulse.ar(0.001);//Dust.ar(density);

	gSize = TRand.ar(grainSize[0], grainSize[1], trigger);//.poll;
	gRate = TRand.ar(rate[0], rate[1], trigger);//.poll;
	gPos = TRand.ar(grainPos[0], grainPos[1], trigger);//.poll;

	sound=TGrains.ar(2, trigger, bufnum, gRate, gPos, gSize, pan, gain);

	enve = Env.linen(0, gSize, 0, 1);
	EnvGen.kr(enve, gate, doneAction:2);
	Out.ar(0, sound);
}).add;

//load some buffers (mono for TGrains):
Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav", bufnum:1);
Buffer.readChannel(s, Platform.resourceDir +/+ "sounds/SinedPink.aiff", channels: [0], bufnum:2);


//create Odef with some controls:
(
Odef(\tgrain, {
	arg gain=0.7, rate=1, density=6, pos=0.7, grainSize=[0.05, 0.7], bufnum=[1]->[1,2], azimuth=0, rho=1;

	inf.do({
		var pan;
		pan=Polar(1, azimuth).imag;
		Synth( \tgrains, [\bufnum, bufnum.choose, \gain,  gain, \grainSize, grainSize, \grainPos,  [ 0, 1 ] , \rate,  [ -2, 2 ] , \pan, pan]);
		(1/density).wait;
	});
});
Odef(\tgrain).addControl("circularSlider", [\gain]);
Odef(\tgrain).addControl("circularSelectSlider", [\bufnum]);
Odef(\tgrain).addControl("scatterXY", [\rate, \density, \play]);
Odef(\tgrain).addControl("scatterRadial", [\azimuth, \rho, \play]);
Odef(\tgrain).addControl("Play", [\play]);
)

::


CLASSMETHODS::


METHOD:: new

argument:: ip
iOS IP Address (can be found in Settings>Wi-Fi advanced settings)
General>Auto-Lock should be set to Never to prevent losing connection.

argument:: port
SCPad reads on port 12345. This value should not be changed.


METHOD:: loadSpecs
By default SCPad loads a few link::Classes/ControlSpec::


METHOD:: defaultControls
By default SCPad loads a few controls.


INSTANCEMETHODS::

private::outgoingRoutine, incomingResponder, prevState, iPadNetAddress, scNetAddr, init, updateAll, assignControls, createState, addDef, removeDef, removeAllDefs, removeDefWithKey

METHOD:: play
Sets SCPad to start updating Odefs with SCPad!

METHOD:: stop
Sets SCPad to stop updating Odefs with SCPad!

METHOD:: isPlaying


returns:: A boolean indicating if SCPad is actively updating Odefs with SCPad!

METHOD:: rate

returns:: The rate at which SCPad is updating with SPad!




EXAMPLES::

code::
(some example code)
::
